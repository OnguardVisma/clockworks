# ASP.NET Core (.NET Framework)
# Build and test ASP.NET Core projects targeting the full .NET Framework.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger: 
- master

pool:
  vmImage: 'windows-latest'

variables:
  solution: 'Onguard.TimeTracker/Onguard.TimeTracker.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

steps:
- task: NuGetToolInstaller@1
  displayName: 'Install Nuget Packages'

- task: NuGetCommand@2
  inputs:
    restoreSolution: '$(solution)'

- task: VSBuild@1
  displayName: 'Build application'
  inputs:
    solution: '$(solution)'
    msbuildArgs: '/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:DesktopBuildPackageLocation="$(build.artifactStagingDirectory)\WebApp.zip" /p:DeployIisAppPath="Default Web Site"'
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'

- task: VSTest@2
  displayName: 'Run unit tests'
  inputs:
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'

- task: ExtractFiles@1
  displayName: 'Extract MSDeploy Crap'
  inputs:
    archiveFilePatterns: '$(build.artifactStagingDirectory)/WebApp.zip'
    destinationFolder: '$(agent.TempDirectory)/unzip'
    cleanDestinationFolder: true

- task: ArchiveFiles@2
  displayName: 'Rezip the actual application folder'
  inputs:
    rootFolderOrFile: '$(agent.TempDirectory)/unzip/Content/d_C/a/1/s/Onguard.TimeTracker/Onguard.TimeTracker/obj/Release/netcoreapp3.1/PubTmp/Out'
    includeRootFolder: false
    archiveType: 'zip'
    archiveFile: '$(Build.ArtifactStagingDirectory)/TimeTracker.zip'
    replaceExistingArchive: true

- task: sftpupload@1
  displayName: 'Upload output to DTAP'
  inputs:
    sourceFolder: '$(Build.ArtifactStagingDirectory)'
    contents: TimeTracker.zip
    host: '$(FtpServer)'
    port: '22'
    username: '$(FtpUserName)'
    password: '$(FtpPassword)'
